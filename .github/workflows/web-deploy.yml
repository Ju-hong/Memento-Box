# 로컬 환경에서 서버 VM으로 배포
name: Build and Deploy FastAPI to Azure VM

on:
  push:
    branches:
      - gpu_main_test
    paths:
      - .
      - '.github/workflows/backend-deploy.yml'
  workflow_dispatch:

jobs:
  build:
    name: Build & Package FastAPI App
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.3'

      - name: Install dependencies
        working-directory: ./app
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Docker image (Optional step)
        working-directory: ./app
        run: |
          docker build -t fastapi_app:latest .

      - name: Create deployment zip
        run: |
          cd backend
          zip -r ../release.zip . -x "venv/*" "__pycache__/*"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: fastapi-artifact
          path: release.zip

  deploy:
    name: Deploy to Azure VM
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: fastapi-artifact

      - name: Copy zip to Azure VM via SCP
        run: |
          echo "${{ secrets.SSH_KEY }}" > private_key
          chmod 600 private_key
          scp -i private_key -o StrictHostKeyChecking=no release.zip ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USER }}/release.zip

      - name: SSH and deploy on Azure VM
        run: |
          ssh -i private_key -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            set -e
            rm -rf ~/backend_temp
            unzip -q ~/release.zip -d ~/backend_temp
            cd ~/backend_temp
            docker-compose down
            docker-compose up -d --build
          EOF

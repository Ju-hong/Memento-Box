version: "3.8"

services:
  web:
    build: ./app
    container_name: fastapi_app
    restart: always
    env_file:
      - .env
    expose:
      - "8000"
    volumes:
      - ./app:/app
      - ./.env:/app/.env
      - ./uploads:/app/uploads
      - ./app/alembic/versions:/app/alembic/versions
    depends_on:
      - db
    networks:
      - memento_net
      - db_net
    command: >
      gunicorn -w 4 -k uvicorn.workers.UvicornWorker -b 127.0.0.1:8000 app:app
      # uvicorn main:app --host 0.0.0.0 --port 8000 --reload # 개발용

  nginx: 
    image: nginx:latest
    container_name: nginx_proxy
    restart: always
    ports:
      - "80:80"   
      - "443:443" 
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf 
      - /etc/ssl/certs/selfsigned.crt:/etc/ssl/certs/selfsigned.crt  
      - /etc/ssl/private/selfsigned.key:/etc/ssl/private/selfsigned.key 
    depends_on:
      - web  # 백엔드 앱이 실행된 후 시작
    networks:
      - memento_net

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}",
        ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - fastapi-app_pgdata:/var/lib/postgresql/data
    networks:
      - db_net

  fish-speech:
    build:
      context: ./fish-speech
      dockerfile: Dockerfile
    container_name: fish-speech
    expose:
      - "5000"
    volumes:
      - ./fish-speech/checkpoints:/app/checkpoints
      - ./shared/input_wav:/app/input_wav
      - ./shared/output_wav:/app/output_wav
      - ./shared/model_output:/app/model_output
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    networks:
      - db_net
    depends_on:
      db:
        condition: service_healthy

networks: 
  memento_net:
    driver: bridge
  db_net:
    driver: bridge

volumes:
  fastapi-app_pgdata:
